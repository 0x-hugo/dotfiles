#!/bin/bash

# Get the project folder path
project_folder=$(git rev-parse --show-toplevel)

# this folders should be equal to maintain consistency. 
# I know it limits nvim cappabilities to be compatible with Vim but I don't care
file_map=(
	"$project_folder/vim/.vimrc:$project_folder/vim/.vim/init.vim"
	"$project_folder/vim/.vim/:$project_folder/nvim/"             
	"$project_folder/lua/:$project_folder/vim/.vim/lua/"
)

# Function to compare files
compare_files() {
  local file1=$1
  local file2=$2

  echo "Comparing files: '$file1' and '$file2'"

  diff_output=$(diff "$file1" "$file2")
  diff_result=$?

  if [ $diff_result -eq 0 ]; then
    echo "Files '$file1' and '$file2' are identical."
    return 0
  else
    echo "Files '$file1' and '$file2' are different:"
    while IFS= read -r line; do
      if [[ $line != *"Common subdirectories"* ]]; then
        echo "  $line"
      fi
    done <<< "$diff_output"
    return 1
  fi
}

# Flag to track if all comparisons pass
all_equal=true

# Arrays to store successful and failed comparisons
successful_comparisons=()
failed_comparisons=()

# Iterate over the file map and compare files
for entry in "${file_map[@]}"; do
  IFS=':' read -ra files <<< "$entry"
  file1="${files[0]}"
  file2="${files[1]}"

  if compare_files "$file1" "$file2"; then
    successful_comparisons+=("$file1:$file2")
  else
    failed_comparisons+=("$file1:$file2")
    all_equal=false
  fi
done

echo "Comparison summary:"
echo "-------------------"

if [ ${#successful_comparisons[@]} -gt 0 ]; then
  echo "Successful comparisons:"
  for comparison in "${successful_comparisons[@]}"; do
    echo "  - $comparison"
  done
else
  echo "No successful comparisons."
fi

if [ ${#failed_comparisons[@]} -gt 0 ]; then
  echo "Failed comparisons:"
  for comparison in "${failed_comparisons[@]}"; do
    echo "  - $comparison"
  done
else
  echo "No failed comparisons."
fi

# Check if all comparisons passed
if $all_equal; then
  echo "All files are equal. Proceeding with the commit."
  exit 0
else
  echo "Some files are different. Aborting the commit."
  exit 1
fi
